@model SkillsAssessment.Models.Account

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_TraqLayout.cshtml";
}

<html>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2 align="center" style="color:white;background-color:grey;">Edit Account Details</h2>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Code, htmlAttributes: new { @Id = "Code" })
        @Html.HiddenFor(model => model.AccountStatusCode, htmlAttributes: new { @Id = "CodeStatusCode" })

        <div class="form-group">
            @Html.LabelFor(model => model.PersonCode, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PersonCode", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.PersonCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountNumber, new
           {
               htmlAttributes = new
               {
                   @class = "form-control"
               ,
                   @required = "required",
                   @onkeypress = "return /[0-9]/i.test(event.key)",
                   @onfocusout = "CheckDuplicateAccountNumber(this.value)",
                        @id = "AccountNumber"
               }
           })
                @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OutstandingBalance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OutstandingBalance, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.OutstandingBalance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to Account", "Details", new { id = Model.Code })
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
    <script>
        function CheckDuplicateAccountNumber(AccountNumber) {
            var accountCode = document.getElementById('Code').value;
            $.get("/BankAccounts/CheckDuplicateAccountNumber?accountNumber=" + escape(AccountNumber) + "&accountCode=" + accountCode,

                function (result) {
                    if (result != "Error") {
                        try {

                            if (result.length = 0) {

                            }
                            else {
                                alert("Account Number exists");

                                $("#AccountNumber").val("");
                            }
                        }
                        catch (cat) {

                        }
                    }
                    else
                        alert("Unsuccessfully captured!");
                });
        }
    </script>
</body>

</html>





