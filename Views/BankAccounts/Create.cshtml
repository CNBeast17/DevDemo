@model SkillsAssessment.Models.Account

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_TraqLayout.cshtml";
}

<html>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Account</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.PersonCode, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("PersonCode", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.PersonCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label col-md-2 required-field" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AccountNumber, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       @required = "required"
               ,
                       @minlength = 1,
                       @maxlength = 50,
                       @onkeypress = "return /[0-9]/i.test(event.key)",@id= "AccountNumber",
                       @onfocusout = "CheckDuplicateAccountNumber(this.value)"
                   }
               })
                    @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group hidden">
                @Html.LabelFor(model => model.AccountStatusCode, "Account Status", htmlAttributes: new { @class = "control-label col-md-2 required-field" })
                <div class="col-md-10">
                    @Html.DropDownList("StatusCode", null, htmlAttributes: new { @class = "form-control", @required = "required" })
                    @Html.ValidationMessageFor(model => model.AccountStatusCode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OutstandingBalance, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OutstandingBalance, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.OutstandingBalance, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to Account", "Details","People", new { id = Model.PersonCode },null)
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
    <script>
        function CheckDuplicateAccountNumber(AccountNumber) {
            $.get("/BankAccounts/CheckDuplicateAccountNumber?accountNumber=" + escape(AccountNumber),

                function (result) {
                    if (result != "Error") {
                        try {

                            if (result.length = 0) {

                            }
                            else {
                                alert("Account Number exists");

                                $("#AccountNumber").val("");
                            }
                        }
                        catch (cat) {

                        }
                    }
                    else
                        alert("Unsuccessfully captured!");
                });
        }
    </script>
</body>
</html>




