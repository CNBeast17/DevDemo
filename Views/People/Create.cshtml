@model SkillsAssessment.Models.Person

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_TraqLayout.cshtml";
}
@if (TempData["Success"] != null)
{
    if (TempData["Success"].Equals(true))
    {
        <div class="alert alert-success">
            <strong>Success!</strong> @TempData["CompletedAction"]
        </div>
    }
    else
    {
        <div class="alert alert-danger">
            @TempData["CompletedAction"]
        </div>
    }
}
<html>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2 align="center" style="color:white;background-color:grey;">Create Person</h2>
      
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return /[^0-9]/i.test(event.key)", @MinLength = 2, @MaxLength = 50 } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2 required-field" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new
                {
                    htmlAttributes = new
                    {
                        @class = "form-control",
                        @onkeypress = "return /[^0-9]/i.test(event.key)"
               ,
                        @MinLength = 2,
                        @MaxLength = 50,
                        @required = "required"
                    }
                })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDNumber, htmlAttributes: new { @class = "control-label col-md-2 required-field" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IDNumber, new
                {
                    htmlAttributes = new
                    {
                        @class = "form-control",
                        @MinLength = 13
               ,
                        @MaxLength = 13,
                        @onfocusout = "CheckDuplicateID(this.value)",
                        @Id = "IdNum",
                        @required = "required"
                    }
                })
                @Html.ValidationMessageFor(model => model.IDNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
    <script>
        function CheckDuplicateID(IdNum) {
            $.get("/People/CheckDuplicateIdNumber?IdNum=" + escape(IdNum),

                function (result) {
                    if (result != "Error") {
                        try {

                            if (result.length = 0) {

                            }
                            else {
                                alert("ID Number exists");

                                $("#IdNum").val("");
                            }
                        }
                        catch (cat) {

                        }
                    }
                    else
                        alert("Unsuccessfully captured!");
                });
        }
    </script>
</body>
</html>





